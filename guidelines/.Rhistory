sp
sp
#load("../analyses/2bRAD/MethGen/dist_allmeth_snp.Robj")
ep10 <-read.csv("../analyses/methylation-filtered/dist.manhat.DMLs.csv",header = T)
ep10 <- ep10[,c("SampNum.row","SampNum.col","dist.manh")]
ep10 <- as.matrix(list2dist(ep10))
mbdorder = c("hc1_2","hc1_4","hc2_15","hc2_17","hc3_1","hc3_5","hc3_7","hc3_10","hc3_11",
"ss2_9","ss2_14","ss2_18","ss3_3","ss3_14","ss3_15","ss3_16","ss3_20","ss5_18")
ep10 <- ep10[mbdorder, mbdorder]
df <- data.frame( gen=gen[lower.tri(gen)], ep=ep10[ lower.tri(ep10)])
sp <- ggplot(df, aes(x=gen,y=ep)) + geom_point(shape=19) +    # Use hollow circles
geom_smooth(method=lm) +
theme_linedraw()+
theme(
axis.title.x = element_text( size=15),
axis.title.y = element_text(size=15),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
xlab("Genetic distance") + ylab("Methylation distance (DMLs)")  +
scale_y_continuous(breaks = c(60000,200000),labels = c("6","20"))+
stat_cor(method = "pearson", label.x = 0.12, label.y = 150000,size=5,p.digits = 0.001)
sp
sp
#load("../analyses/2bRAD/MethGen/dist_allmeth_snp.Robj")
ep10 <-read.csv("../analyses/methylation-filtered/dist.manhat.DMLs.csv",header = T)
ep10 <- ep10[,c("SampNum.row","SampNum.col","dist.manh")]
ep10 <- as.matrix(list2dist(ep10))
mbdorder = c("hc1_2","hc1_4","hc2_15","hc2_17","hc3_1","hc3_5","hc3_7","hc3_10","hc3_11",
"ss2_9","ss2_14","ss2_18","ss3_3","ss3_14","ss3_15","ss3_16","ss3_20","ss5_18")
ep10 <- ep10[mbdorder, mbdorder]
df <- data.frame( gen=gen[lower.tri(gen)], ep=ep10[ lower.tri(ep10)])
sp <- ggplot(df, aes(x=gen,y=ep)) + geom_point(shape=19) +    # Use hollow circles
geom_smooth(method=lm) +
theme_linedraw()+
theme(
axis.title.x = element_text( size=15),
axis.title.y = element_text(size=15),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
xlab("Genetic distance") + ylab("Methylation distance (DMLs)")  +
scale_y_continuous(breaks = c(50000,200000),labels = c("5","20"))+
stat_cor(method = "pearson", label.x = 0.12, label.y = 150000,size=5,p.digits = 0.001)
sp
sp
#load("../analyses/2bRAD/MethGen/dist_allmeth_snp.Robj")
ep10 <-read.csv("../analyses/methylation-filtered/dist.manhat.DMLs.csv",header = T)
ep10 <- ep10[,c("SampNum.row","SampNum.col","dist.manh")]
ep10 <- as.matrix(list2dist(ep10))
mbdorder = c("hc1_2","hc1_4","hc2_15","hc2_17","hc3_1","hc3_5","hc3_7","hc3_10","hc3_11",
"ss2_9","ss2_14","ss2_18","ss3_3","ss3_14","ss3_15","ss3_16","ss3_20","ss5_18")
ep10 <- ep10[mbdorder, mbdorder]
df <- data.frame( gen=gen[lower.tri(gen)], ep=ep10[ lower.tri(ep10)])
sp <- ggplot(df, aes(x=gen,y=ep)) + geom_point(shape=19) +    # Use hollow circles
geom_smooth(method=lm) +
theme_linedraw()+
theme(
axis.title.x = element_text( size=15),
axis.title.y = element_text(size=15),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
xlab("Genetic distance") + ylab("Methylation distance (DMLs)")  +
scale_y_continuous(breaks = c(50000,200000),labels = c("5","20"))+
stat_cor(method = "pearson", label.x = 0.12, label.y = 190000,size=5,p.digits = 0.001)
sp
sp
#load("../analyses/2bRAD/MethGen/dist_allmeth_snp.Robj")
ep10 <-read.csv("../analyses/methylation-filtered/dist.manhat.DMLs.csv",header = T)
ep10 <- ep10[,c("SampNum.row","SampNum.col","dist.manh")]
ep10 <- as.matrix(list2dist(ep10))
mbdorder = c("hc1_2","hc1_4","hc2_15","hc2_17","hc3_1","hc3_5","hc3_7","hc3_10","hc3_11",
"ss2_9","ss2_14","ss2_18","ss3_3","ss3_14","ss3_15","ss3_16","ss3_20","ss5_18")
ep10 <- ep10[mbdorder, mbdorder]
df <- data.frame( gen=gen[lower.tri(gen)], ep=ep10[ lower.tri(ep10)])
sp <- ggplot(df, aes(x=gen,y=ep)) + geom_point(shape=19) +    # Use hollow circles
geom_smooth(method=lm) +
theme_linedraw()+
theme(
axis.title.x = element_text( size=15),
axis.title.y = element_text(size=15),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
xlab("Genetic distance") + ylab("Methylation distance (DMLs)")  +
scale_y_continuous(breaks = c(50000,200000),labels = c("5","20"))+
stat_cor(method = "pearson", label.x = 0.115, label.y = 190000,size=5,p.digits = 0.001)
sp
sp
fst <- read.csv("../analyses/2bRAD/HCSS_sfsm70_Per10kbFst.csv")
fst <- read.csv("../analyses/2bRAD/MethGen/HCSS_sfsm70_Per10kbFst.csv")
id <- paste(fst$contig,fst$start,fst$end, sep = "_")
fst <- cbind(id,fst)
pst10kb <- read.csv("../analyses/methylation-filtered/Pst_bins_10kb.tab", sep="\t",header=T,stringsAsFactors = F)
colnames(pst10kb) <- c("id","contig","start","end","pst","pst.lowCI","pst.highCI")
both = merge(pst10kb,fst, by ="id")
sp <- ggplot(both, aes(x=fst01,y=pst)) + geom_point(shape=19) +    # Use hollow circles
geom_smooth(method=lm) +
theme_linedraw()+
theme(
axis.title.x = element_text( size=15),
axis.title.y = element_text(size=15),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
xlab("Fst") + ylab("Pst")  +
#scale_y_continuous(breaks = c(9000,15000),labels = c("9","15"))+
stat_cor(method = "pearson", label.x = 0.35, label.y = 0.8,size=5,p.digits = 0.001)
sp
sp
fst <- read.csv("../analyses/2bRAD/MethGen/HCSS_sfsm70_Per10kbFst.csv")
id <- paste(fst$contig,fst$start,fst$end, sep = "_")
fst <- cbind(id,fst)
pst10kb <- read.csv("../analyses/methylation-filtered/Pst_bins_10kb.tab", sep="\t",header=T,stringsAsFactors = F)
colnames(pst10kb) <- c("id","contig","start","end","pst","pst.lowCI","pst.highCI")
both = merge(pst10kb,fst, by ="id")
sp <- ggplot(both, aes(x=fst01,y=pst)) + geom_point(shape=19) +    # Use hollow circles
geom_smooth(method=lm) +
theme_linedraw()+
theme(
axis.title.x = element_text( size=15),
axis.title.y = element_text(size=15),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
xlab("Fst") + ylab("Pst")  +
#scale_y_continuous(breaks = c(9000,15000),labels = c("9","15"))+
stat_cor(method = "pearson", label.x = 0.35, label.y = 0.9,size=5,p.digits = 0.001)
sp
sp
fst <- read.csv("../analyses/2bRAD/MethGen/HCSS_sfsm70_Per10kbFst.csv")
id <- paste(fst$contig,fst$start,fst$end, sep = "_")
fst <- cbind(id,fst)
pst10kb <- read.csv("../analyses/methylation-filtered/Pst_bins_10kb.tab", sep="\t",header=T,stringsAsFactors = F)
colnames(pst10kb) <- c("id","contig","start","end","pst","pst.lowCI","pst.highCI")
both = merge(pst10kb,fst, by ="id")
sp <- ggplot(both, aes(x=fst01,y=pst)) + geom_point(shape=19) +    # Use hollow circles
geom_smooth(method=lm) +
theme_linedraw()+
theme(
axis.title.x = element_text( size=15),
axis.title.y = element_text(size=15),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
xlab("Fst") + ylab("Pst")  +
#scale_y_continuous(breaks = c(9000,15000),labels = c("9","15"))+
stat_cor(method = "pearson", label.x = 0.35, label.y = 0.87,size=5,p.digits = 0.001)
sp
sp
ep <- read.table("../analyses/methylation-filtered/PC-scores-filtered-methylation.tab",
header=T, sep="\t",row.names = "sample")
#add sample names
key = read.csv("../data/sample-key.csv",colClasses = c("character","character"))
samples = rownames(ep)
mapdf <- data.frame(old=key$MBD.FILENAME,new=key$SAMPLE)
rownames(ep) <- mapdf$new[match(samples,mapdf$old)]
gen <- read.table("../analyses/2bRAD/MethGen/MBD_pca_covMat.tsv")
mbdorder = c("hc1_2","hc1_4","hc2_15","hc2_17","hc3_1","hc3_10","hc3_11","hc3_5","hc3_7",
"ss2_14","ss2_18","ss2_9","ss3_14","ss3_15","ss3_16","ss3_20","ss3_3","ss5_18")
rownames(gen) <- mbdorder
#make sure ep and gen in same order
ep <- ep[mbdorder,]
both <- merge(ep[,"PC2"],gen[,"PC1"],by="row.names",sort=F)
Pop <- as.factor(c(rep("Hood Canal",9),rep("South Sound",9)))
both <- cbind(both,Pop)
sp <- ggplot(both, aes(x=y,y=x)) +
geom_point(aes(shape=Pop,color=Pop),size=3) +
scale_shape_manual(values=c(16,17)) +
scale_color_manual(values=c("firebrick3", "blue3")) +
geom_smooth(method=lm) +
theme_linedraw()+
theme(
axis.title.x = element_text( size=15),
axis.title.y = element_text(size=15),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
xlab("PC1 SNPs") + ylab("PC2 Methylation")  +
stat_cor(method = "pearson", label.x = 15, label.y = 20,size=4,p.digits = 0.001)
sp
#ggsave(sp, file = "../analyses/2bRAD/MethGen/methPC2_SNPPC1.png", dpi = 800)
sp
both
ep <- read.table("../analyses/methylation-filtered/PC-scores-filtered-methylation.tab",
header=T, sep="\t",row.names = "sample")
#add sample names
key = read.csv("../data/sample-key.csv",colClasses = c("character","character"))
samples = rownames(ep)
mapdf <- data.frame(old=key$MBD.FILENAME,new=key$SAMPLE)
rownames(ep) <- mapdf$new[match(samples,mapdf$old)]
gen <- read.table("../analyses/2bRAD/MethGen/MBD_pca_covMat.tsv")
mbdorder = c("hc1_2","hc1_4","hc2_15","hc2_17","hc3_1","hc3_10","hc3_11","hc3_5","hc3_7",
"ss2_14","ss2_18","ss2_9","ss3_14","ss3_15","ss3_16","ss3_20","ss3_3","ss5_18")
rownames(gen) <- mbdorder
#make sure ep and gen in same order
ep <- ep[mbdorder,]
both <- merge(ep[,"PC2"],gen[,"PC1"],by="row.names",sort=F)
Pop <- as.factor(c(rep("Hood Canal",9),rep("South Sound",9)))
both <- cbind(both,Pop)
sp <- ggplot(both, aes(x=y,y=x)) +
geom_point(aes(shape=Pop,color=Pop),size=3) +
scale_shape_manual(values=c(16,17)) +
scale_color_manual(values=c("firebrick3", "blue3")) +
geom_smooth(method=lm) +
theme_linedraw()+
theme(
axis.title.x = element_text( size=15),
axis.title.y = element_text(size=15),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
xlab("PC1 SNPs") + ylab("PC2 Methylation")  +
stat_cor(method = "pearson", label.x = .15, label.y = 20,size=4,p.digits = 0.001)
sp
#ggsave(sp, file = "../analyses/2bRAD/MethGen/methPC2_SNPPC1.png", dpi = 800)
sp
ep <- read.table("../analyses/methylation-filtered/PC-scores-filtered-methylation.tab",
header=T, sep="\t",row.names = "sample")
#add sample names
key = read.csv("../data/sample-key.csv",colClasses = c("character","character"))
samples = rownames(ep)
mapdf <- data.frame(old=key$MBD.FILENAME,new=key$SAMPLE)
rownames(ep) <- mapdf$new[match(samples,mapdf$old)]
gen <- read.table("../analyses/2bRAD/MethGen/MBD_pca_covMat.tsv")
mbdorder = c("hc1_2","hc1_4","hc2_15","hc2_17","hc3_1","hc3_10","hc3_11","hc3_5","hc3_7",
"ss2_14","ss2_18","ss2_9","ss3_14","ss3_15","ss3_16","ss3_20","ss3_3","ss5_18")
rownames(gen) <- mbdorder
#make sure ep and gen in same order
ep <- ep[mbdorder,]
both <- merge(ep[,"PC2"],gen[,"PC1"],by="row.names",sort=F)
Pop <- as.factor(c(rep("Hood Canal",9),rep("South Sound",9)))
both <- cbind(both,Pop)
sp <- ggplot(both, aes(x=y,y=x)) +
geom_point(aes(shape=Pop,color=Pop),size=3) +
scale_shape_manual(values=c(16,17)) +
scale_color_manual(values=c("firebrick3", "blue3")) +
geom_smooth(method=lm) +
theme_linedraw()+
theme(
axis.title.x = element_text( size=15),
axis.title.y = element_text(size=15),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
xlab("PC1 SNPs") + ylab("PC2 Methylation")  +
stat_cor(method = "pearson", label.x = .1, label.y = 170,size=4,p.digits = 0.001)
sp
#ggsave(sp, file = "../analyses/2bRAD/MethGen/methPC2_SNPPC1.png", dpi = 800)
sp
ep <- read.table("../analyses/methylation-filtered/PC-scores-filtered-methylation.tab",
header=T, sep="\t",row.names = "sample")
#add sample names
key = read.csv("../data/sample-key.csv",colClasses = c("character","character"))
samples = rownames(ep)
mapdf <- data.frame(old=key$MBD.FILENAME,new=key$SAMPLE)
rownames(ep) <- mapdf$new[match(samples,mapdf$old)]
gen <- read.table("../analyses/2bRAD/MethGen/MBD_pca_covMat.tsv")
mbdorder = c("hc1_2","hc1_4","hc2_15","hc2_17","hc3_1","hc3_10","hc3_11","hc3_5","hc3_7",
"ss2_14","ss2_18","ss2_9","ss3_14","ss3_15","ss3_16","ss3_20","ss3_3","ss5_18")
rownames(gen) <- mbdorder
#make sure ep and gen in same order
ep <- ep[mbdorder,]
both <- merge(ep[,"PC2"],gen[,"PC1"],by="row.names",sort=F)
Pop <- as.factor(c(rep("Hood Canal",9),rep("South Sound",9)))
both <- cbind(both,Pop)
sp <- ggplot(both, aes(x=y,y=x)) +
geom_point(aes(shape=Pop,color=Pop),size=3) +
scale_shape_manual(values=c(16,17)) +
scale_color_manual(values=c("firebrick3", "blue3")) +
geom_smooth(method=lm) +
theme_linedraw()+
theme(
axis.title.x = element_text( size=15),
axis.title.y = element_text(size=15),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
xlab("PC1 SNPs") + ylab("PC2 Methylation")  +
stat_cor(method = "pearson", label.x = .05, label.y = 170,size=4,p.digits = 0.001)
sp
#ggsave(sp, file = "../analyses/2bRAD/MethGen/methPC2_SNPPC1.png", dpi = 800)
sp
ep <- read.table("../analyses/methylation-filtered/PC-scores-filtered-methylation.tab",
header=T, sep="\t",row.names = "sample")
#add sample names
key = read.csv("../data/sample-key.csv",colClasses = c("character","character"))
samples = rownames(ep)
mapdf <- data.frame(old=key$MBD.FILENAME,new=key$SAMPLE)
rownames(ep) <- mapdf$new[match(samples,mapdf$old)]
gen <- read.table("../analyses/2bRAD/MethGen/MBD_pca_covMat.tsv")
mbdorder = c("hc1_2","hc1_4","hc2_15","hc2_17","hc3_1","hc3_10","hc3_11","hc3_5","hc3_7",
"ss2_14","ss2_18","ss2_9","ss3_14","ss3_15","ss3_16","ss3_20","ss3_3","ss5_18")
rownames(gen) <- mbdorder
#make sure ep and gen in same order
ep <- ep[mbdorder,]
both <- merge(ep[,"PC2"],gen[,"PC1"],by="row.names",sort=F)
Pop <- as.factor(c(rep("Hood Canal",9),rep("South Sound",9)))
both <- cbind(both,Pop)
sp <- ggplot(both, aes(x=y,y=x)) +
geom_point(aes(shape=Pop,color=Pop),size=3) +
scale_shape_manual(values=c(16,17)) +
scale_color_manual(values=c("firebrick3", "blue3")) +
geom_smooth(method=lm) +
theme_linedraw()+
theme(
axis.title.x = element_text( size=15),
axis.title.y = element_text(size=15),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
xlab("PC1 SNPs") + ylab("PC2 Methylation")  +
stat_cor(method = "pearson", label.x = 0, label.y = 200,size=4,p.digits = 0.001)
sp
#ggsave(sp, file = "../analyses/2bRAD/MethGen/methPC2_SNPPC1.png", dpi = 800)
sp
install.packages("tidyverse")
install.packages("MatrixEQTL")
library(deseq2)
library(knitr)
my.jekyll.site <- "marineomics.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/")
KnitPost("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/PopGen/WGSFullWalkthrough.Rmd")
library(knitr)
my.jekyll.site <- "marineomics.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/")
KnitPost("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guideline-intro.Rmd")
library(knitr)
my.jekyll.site <- "marineomics.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines")
KnitPost("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/guideline-intro.Rmd")
library(knitr)
my.jekyll.site <- "marineomics.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/")
KnitPost("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/WGS_intro.Rmd")
library(knitr)
my.jekyll.site <- "marineomics.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines")
KnitPost("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/WGSFullWalkthrough.Rmd")
library(knitr)
my.jekyll.site <- "marineomics.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/")
KnitPost("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/WGS_intro.Rmd")
library(knitr)
my.jekyll.site <- "marineomics.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/")
KnitPost("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/WGS_intro.Rmd")
library(knitr)
my.jekyll.site <- "marineomics.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/")
KnitPost("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/index.Rmd")
library(knitr)
my.jekyll.site <- "marineomics.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/")
KnitPost("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/WGS_intro.Rmd")
library(knitr)
my.jekyll.site <- "marineomics.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/")
KnitPost("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/WGS_intro.Rmd")
library(knitr)
my.jekyll.site <- "marineomics.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/")
KnitPost("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/WGS_intro.Rmd")
library(knitr)
my.jekyll.site <- "marineomics.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/")
KnitPost("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/WGS_intro.Rmd")
library(knitr)
my.jekyll.site <- "marineomics.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines")
KnitPost("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/WGSFullWalkthrough.Rmd")
library(knitr)
my.jekyll.site <- "marineomics.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/")
KnitPost("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/WGS_intro.Rmd")
library(knitr)
my.jekyll.site <- "marineomics.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines")
KnitPost("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/guideline-intro.Rmd")
library(knitr)
my.jekyll.site <- "marineomics.github.io"
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/")
KnitPost("~/Postdoc_Projects/RCN_MarineOmics/Website/marineomics.github.io/guidelines/WGS_intro.Rmd")
